name: Prepare Bugfix Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Bugfix version (e.g., 1.0.1 or v1.0.1)'
        required: true
        type: string

jobs:
  create-bugfix-branch:
    name: Create Bugfix Branch
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate not on main branch
        run: |
          current_branch="${{ github.ref_name }}"
          if [ "$current_branch" = "main" ]; then
            echo "Error: Cannot create bugfix branch from main branch. Please select another branch or a tag"
            exit 1
          fi
          echo "Creating bugfix branch from: $current_branch"

      - name: Normalize version and validate
        id: normalize_version
        run: |
          version="${{ github.event.inputs.version }}"
          # Remove 'v' prefix if present
          version="${version#v}"

          # Validate semver format (basic check)
          if ! echo "$version" | grep -qE '^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?$'; then
            echo "Error: Invalid version format. Expected semver format (e.g., 1.0.1)"
            exit 1
          fi

          # Extract patch version
          patch_version=$(echo "$version" | cut -d. -f3 | cut -d- -f1)

          # Warn if patch version is 0
          if [ "$patch_version" = "0" ]; then
            echo "::warning::Patch version is 0. Bugfix branches typically have a non-zero patch version (e.g., 1.0.1, not 1.0.0)"
          fi

          branch_name="bugfix/$version"
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

      - name: Check if branch exists
        run: |
          if git ls-remote --heads origin "${{ steps.normalize_version.outputs.branch_name }}" | grep -q "${{ steps.normalize_version.outputs.branch_name }}"; then
            echo "Error: Branch ${{ steps.normalize_version.outputs.branch_name }} already exists"
            exit 1
          fi

      - name: Create and push bugfix branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b "${{ steps.normalize_version.outputs.branch_name }}"
          git push -u origin "${{ steps.normalize_version.outputs.branch_name }}"
          echo "âœ… Created bugfix branch: ${{ steps.normalize_version.outputs.branch_name }}"
